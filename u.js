// Generated by CoffeeScript 1.12.4
(function() {
  var Utilities;

  Utilities = (function() {
    function Utilities() {}

    Utilities.prototype.setAttributes = function(el, attrs) {
      var key, results, value;
      results = [];
      for (key in attrs) {
        value = attrs[key];
        if (value) {
          results.push(el.setAttribute(key, value));
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    Utilities.prototype.setStyles = function(el, styles) {
      var key, results, value;
      results = [];
      for (key in styles) {
        value = styles[key];
        results.push(el.style[key] = value + "px");
      }
      return results;
    };

    Utilities.prototype.clearActiveCells = function(table) {
      var activeCell, activeCells, i, index, j, len, len1, redCell, redCells;
      redCells = table.redCells;
      activeCells = table.activeCells;
      if (redCells.length > 0) {
        for (index = i = 0, len = redCells.length; i < len; index = ++i) {
          redCell = redCells[index];
          if (redCell != null) {
            redCell.makeInactive();
          }
        }
        table.redCells = [];
      }
      if (activeCells.length > 0) {
        for (index = j = 0, len1 = activeCells.length; j < len1; index = ++j) {
          activeCell = activeCells[index];
          if (activeCell != null) {
            activeCell.makeInactive();
          }
          if (activeCell != null) {
            activeCell.hideControl();
          }
        }
        table.activeCells = [];
      }
      table.selectionStart = null;
      table.selectionEnd = null;
      table.contextMenu.hide();
      if (table.selectedCol) {
        return table.selectedCol.makeInactive();
      }
    };

    Utilities.prototype.capitalize = function(string) {
      return string.toLowerCase().replace(/\b./g, function(a) {
        return a.toUpperCase();
      });
    };

    return Utilities;

  })();

}).call(this);
